1 - Criar uma aplicação em NextJS
yarn create next-app nomeDaAplicação

Pasta pages
- Cada arquivo dentro dessa pasta é uma rota
- Essa pasta não pode ser renomeada
- Só pode estar na raiz do projeto ou no src
- O arquivo index automaticamente será a rota "/"
- File system routing
- pages/my-folder/index.tsx -> http://localhost:3000/my-folder
- pages/my-folder/about.tsx -> http://localhost:3000/my-folder/about
- import Link from "next/link" -> Para navegar entre as páginas
<Link href="/my-folder/about">
    <a>My third page</a> // Podemos usar qualquer elemento que aceita o onclick
</Link>

<Link
      href={{
        pathname: "/about",
        query: { id: "test" }, // Passar parâmetros entre rotas
      }} 
    >
      <a>About page</a>
</Link>

Scoped CSS 
- CSS restrito a um componente
- Podemos usar por padrão no next
- .module.css 
- não podemos estilizar os elementos diretamente ex: h1, li, ul
import styles from '../styles/home.module.css'
<h1 className={styles.title}>
    hello world
</h1>

.module.scss
Utilizar o sass
- yarn add sass
- trocar a extensão dos arquivos de estilização para .scss
.scss -> obrigatório chaves
.sass -> não é obrigado chaves


Podemos colocar o title do Head em qualquer lugar do Next 
assim como tags de SEO e dessa forma podemos direcionar o SEO para uma página específica

<Head>
    <tite>Início | Página </title>
</Head>

_app.tsx 
- componente que fica em volta de todas as páginas
- Renderiza a página no momento do roteamento utilizando o Component seguido das propriedades da página com pageProps
- Para repetir algo em todas as páginas colocar ele no app 
- Reexecutado toda vez que o usuário trocar de tela

_document.tsx
- Carregado apenas uma única vez
- Representa o nosso index.html
- <Main /> renderiza todos os componentes principais
- <NextScript /> Coloca os arquivos js que a aplicação precisa para funcionar]

Imagens ficam sempre na pasta public
e importamos usando /images/nomeDaimagem. 

-> se eu fizer uma chamada a api da forma tradicional com useEffect e useState para guardar os dados
   essa chamada só acontecerá dentro do browser, sendo assim quando o browser ler o conteúdo do nosso site
   não encontrará as informações buscadas na API, pois isso é feito depois da leitura e ranqueamento

   Layout shift -> se a chamada for feita com o formato antigo será perceptível a busca de dados, pois o usuário verá
                   os dados sendo buscados após o layout ser carregado no browser

para resolver isso nós buscamos os dados do lado do servidor para após isso entregar o layout ao browser com esses dados
o grande problema é que se demorar 3 seg para buscar esses dados, irá demorar 3 seg para entregarmos toda a página para o browser

Eu só consigo buscar algo via http de forma server side se for dentro de uma página do next,
para ter acesso aos dados buscados no meu componente eu preciso repassar os dados pegos na página para o componente